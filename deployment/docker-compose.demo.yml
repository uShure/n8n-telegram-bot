version: '3.8'

services:
  # Demo PostgreSQL with preset data
  postgres-demo:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=demo123
      - POSTGRES_DB=n8n_demo
    volumes:
      - ./demo/init-demo-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - demo-network

  # n8n in demo mode
  n8n-demo:
    image: n8nio/n8n:latest
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=demo
      - N8N_BASIC_AUTH_PASSWORD=demo123
      - N8N_HOST=localhost
      - N8N_PROTOCOL=http
      - N8N_PORT=5678
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-demo
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_demo
      - DB_POSTGRESDB_USER=demo
      - DB_POSTGRESDB_PASSWORD=demo123
      - N8N_ENCRYPTION_KEY=demo-encryption-key-not-for-production
      - N8N_USER_MANAGEMENT_DISABLED=true
      - GENERIC_TIMEZONE=Europe/Moscow
      - TZ=Europe/Moscow
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
    volumes:
      - ./demo/n8n-data:/home/node/.n8n
      - ./demo/workflows:/home/node/.n8n/workflows
    depends_on:
      - postgres-demo
    networks:
      - demo-network

  # Mock API server for demo
  mock-api:
    image: node:18-alpine
    restart: always
    ports:
      - "3001:3001"
    volumes:
      - ./demo/mock-server:/app
    working_dir: /app
    command: sh -c "npm install && npm start"
    networks:
      - demo-network

  # Demo landing page
  landing-demo:
    image: nginx:alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./landing:/usr/share/nginx/html:ro
      - ./demo/nginx-demo.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - demo-network

networks:
  demo-network:
    driver: bridge

volumes:
  demo-postgres-data:
  demo-n8n-data:
