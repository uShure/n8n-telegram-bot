{
  "name": "Telegram Bot - DeepSeek R1 —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ]
      },
      "id": "telegram_trigger",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [100, 300],
      "webhookId": "telegram-webhook",
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot API"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "values": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "outputKey": "start"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "values": [
                  {
                    "leftValue": "={{ $json.callback_query ? true : false }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "outputKey": "callback"
            }
          ]
        }
      },
      "id": "switch_router",
      "name": "Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [300, 300]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "üéñÔ∏è *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö!*\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ, –æ—Ç —á—å–µ–≥–æ –ª–∏—Ü–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üìå –ö–æ–º–∞–Ω–¥–∏—Ä",
                    "callback_data": "role_commander"
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "üëÅ –û—á–µ–≤–∏–¥–µ—Ü",
                    "callback_data": "role_witness"
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "üíº –°—Ç–∞—Ä—à–∏–Ω–∞",
                    "callback_data": "role_sergeant"
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "üìÉ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ",
                    "callback_data": "role_conclusion"
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "‚úçÔ∏è –°–≤–æ–π —Ç–µ–∫—Å—Ç",
                    "callback_data": "role_custom"
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "send_menu",
      "name": "Send Menu",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [500, 200],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot API"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "read",
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "__rl": true,
          "value": "Users",
          "mode": "name"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "userId",
              "lookupValue": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "google_sheets_read",
      "name": "Check User",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [500, 400],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ\nconst userData = $input.first().json;\nconst callbackData = $node[\"Telegram Trigger\"].json.callback_query;\nconst userId = callbackData.from.id;\nconst chatId = callbackData.message.chat.id;\nconst role = callbackData.data.replace('role_', '');\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\nif (!userData || Object.keys(userData).length === 0) {\n  // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n  return {\n    action: 'create_user',\n    userId: userId,\n    chatId: chatId,\n    role: role,\n    quota: 1,\n    sub: false,\n    canGenerate: true\n  };\n}\n\n// –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\nconst quota = parseInt(userData.quota) || 0;\nconst hasSub = userData.sub === 'true' || userData.sub === true;\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã\nif (hasSub) {\n  return {\n    action: 'generate',\n    userId: userId,\n    chatId: chatId,\n    role: role,\n    quota: quota,\n    sub: true,\n    canGenerate: true\n  };\n}\n\n// –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏\nif (quota < 6) {\n  return {\n    action: 'update_and_generate',\n    userId: userId,\n    chatId: chatId,\n    role: role,\n    quota: quota + 1,\n    sub: false,\n    canGenerate: true,\n    rowNumber: userData.row_number\n  };\n}\n\n// –õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω\nreturn {\n  action: 'limit_reached',\n  userId: userId,\n  chatId: chatId,\n  role: role,\n  quota: quota,\n  sub: false,\n  canGenerate: false\n};"
      },
      "id": "check_limits",
      "name": "Check Limits",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 400]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "values": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "create_user",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "outputKey": "create_user"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "values": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "update_and_generate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "outputKey": "update_and_generate"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "values": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "generate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "outputKey": "generate"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "values": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "limit_reached",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              },
              "outputKey": "limit_reached"
            }
          ]
        }
      },
      "id": "action_router",
      "name": "Action Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "__rl": true,
          "value": "Users",
          "mode": "name"
        },
        "fieldsUi": {
          "values": [
            {
              "column": "userId",
              "fieldValue": "={{ $json.userId }}"
            },
            {
              "column": "chatId",
              "fieldValue": "={{ $json.chatId }}"
            },
            {
              "column": "role",
              "fieldValue": "={{ $json.role }}"
            },
            {
              "column": "quota",
              "fieldValue": "={{ $json.quota }}"
            },
            {
              "column": "sub",
              "fieldValue": "={{ $json.sub }}"
            }
          ]
        },
        "options": {}
      },
      "id": "create_user_sheets",
      "name": "Create User",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1100, 200],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets API"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "__rl": true,
          "value": "Users",
          "mode": "name"
        },
        "dataMode": "autoMapInputData",
        "fieldsUi": {
          "values": [
            {
              "column": "quota",
              "fieldValue": "={{ $json.quota }}"
            },
            {
              "column": "role",
              "fieldValue": "={{ $json.role }}"
            }
          ]
        },
        "options": {
          "rangeDefinition": "singleCell",
          "cellFormat": "USER_ENTERED",
          "range": {
            "rangeValue": "={{ 'A' + $json.rowNumber + ':E' + $json.rowNumber }}"
          }
        }
      },
      "id": "update_user_sheets",
      "name": "Update User",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1100, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.deepseek.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_DEEPSEEK_API_KEY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "deepseek-chat"
            },
            {
              "name": "messages",
              "value": "={{ $json.messages }}"
            },
            {
              "name": "temperature",
              "value": "0.7"
            },
            {
              "name": "max_tokens",
              "value": "2000"
            }
          ]
        },
        "options": {}
      },
      "id": "deepseek_api",
      "name": "DeepSeek API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1500, 300]
    },
    {
      "parameters": {
        "jsCode": "// –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –∏ –≥–æ—Ç–æ–≤–∏–º –ø—Ä–æ–º–ø—Ç\nconst role = $json.role;\n\n// –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π\nconst prompts = {\n  commander: {\n    system: \"–¢—ã –æ–ø—ã—Ç–Ω—ã–π –≤–æ–µ–Ω–Ω—ã–π –∫–æ–º–∞–Ω–¥–∏—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∫–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ—Ç –ª–∏—Ü–∞ –∫–æ–º–∞–Ω–¥–∏—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è. –°—Ç–∏–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º, –≤–æ–µ–Ω–Ω—ã–º, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏.\",\n    user: \"–ù–∞–ø–∏—à–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å–∫—É –æ—Ç –ª–∏—Ü–∞ –∫–æ–º–∞–Ω–¥–∏—Ä–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É –Ω–∞—Ä—É—à–µ–Ω–∏—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–º. –í–∫–ª—é—á–∏: –¥–∞—Ç—É, –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞, –ø—Ä–∏–Ω—è—Ç—ã–µ –º–µ—Ä—ã, –≤—ã–≤–æ–¥—ã.\"\n  },\n  witness: {\n    system: \"–¢—ã –æ—á–µ–≤–∏–¥–µ—Ü –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å–∫—É. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –¥–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—Å–∞—Ç—å —É–≤–∏–¥–µ–Ω–Ω–æ–µ, —Å–æ–±–ª—é–¥–∞—è —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—é —Å–æ–±—ã—Ç–∏–π.\",\n    user: \"–ù–∞–ø–∏—à–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å–∫—É –æ—Ç –ª–∏—Ü–∞ –æ—á–µ–≤–∏–¥—Ü–∞ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è. –û–ø–∏—à–∏ —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –∫–æ–≥–¥–∞, –≥–¥–µ, –∫—Ç–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª. –ë—É–¥—å –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –∏ —Ç–æ—á–Ω—ã–º.\"\n  },\n  sergeant: {\n    system: \"–¢—ã —Å—Ç–∞—Ä—à–∏–Ω–∞ —Ä–æ—Ç—ã, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∏ –ø–æ—Ä—è–¥–æ–∫. –ü–∏—à–µ—à—å –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏.\",\n    user: \"–ù–∞–ø–∏—à–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å–∫—É –æ—Ç –ª–∏—Ü–∞ —Å—Ç–∞—Ä—à–∏–Ω—ã —Ä–æ—Ç—ã. –û–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã.\"\n  },\n  conclusion: {\n    system: \"–¢—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—à—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å–ª—É–∂–µ–±–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫. –°—Ç–∏–ª—å - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ-–¥–µ–ª–æ–≤–æ–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π.\",\n    user: \"–°–æ—Å—Ç–∞–≤—å –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å–ª—É–∂–µ–±–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏. –í–∫–ª—é—á–∏: –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–∫—Ç—ã, –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\"\n  },\n  custom: {\n    system: \"–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–º–æ–≥–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å–∫—É.\",\n    user: \"–ù–∞–ø–∏—à–∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å–∫—É –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Ç–µ–º—É. –°–æ–±–ª—é–¥–∞–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ-–¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å.\"\n  }\n};\n\nconst selectedPrompt = prompts[role] || prompts.custom;\n\nreturn {\n  messages: [\n    {\n      role: \"system\",\n      content: selectedPrompt.system\n    },\n    {\n      role: \"user\",\n      content: selectedPrompt.user\n    }\n  ],\n  role: role,\n  chatId: $json.chatId\n};"
      },
      "id": "prepare_prompt",
      "name": "Prepare Prompt",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1300, 300]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chatId }}",
        "text": "={{ $json.choices[0].message.content }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "send_response",
      "name": "Send Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1700, 300],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot API"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chatId }}",
        "text": "‚ö†Ô∏è *–õ–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω!*\\n\\n–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ 6 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π.\\n\\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                    "callback_data": "subscribe"
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "send_limit_message",
      "name": "Send Limit Message",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1100, 500],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot API"
        }
      }
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Router": {
      "main": [
        [
          {
            "node": "Send Menu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User": {
      "main": [
        [
          {
            "node": "Check Limits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Limits": {
      "main": [
        [
          {
            "node": "Action Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Action Router": {
      "main": [
        [
          {
            "node": "Create User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Limit Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create User": {
      "main": [
        [
          {
            "node": "Prepare Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update User": {
      "main": [
        [
          {
            "node": "Prepare Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Prompt": {
      "main": [
        [
          {
            "node": "DeepSeek API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek API": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateId": "telegram-deepseek-bot"
  },
  "tags": []
}
